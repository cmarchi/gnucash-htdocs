<?php
include("lang.php");
$title = T_("Sizing");
include("emulate_globals_on.php");
include("externals/header.phtml");
include("externals/menu.phtml");
?>

<div id="content">

<h1><?php echo T_($title);?></h1>

<p class="justify">
<?php echo T_("It can often be quite interesting to study the source code metrics behind a software development project.   Not a surprising interest: its accounting afterall. <span class=\"gnucash\">GnuCash</span> has grown, over the years, from a small handy electronic checkbook to a rather large and multi-featured desktop app.");?>
</p>
<p class="justify">
<?php echo T_("<span class=\"gnucash\">GnuCash</span> currently consists of over a third of a million lines of code spread over more than a thousand files.  It has been translated into twenty-three languages and credits over 139 authors and contributors.");?>
</p>
<p class="center">
<img alt="[code size graph]" src="<?=$top_dir?>/images/sizing-graph.png" width="640" height="480" />
</p>
<p class="justify">
<?php echo T_("If you've had trouble swimming through that mass of source code, think of it this way: printed out on paper, and bound into volumes, it would amount to several dozen copies of Tolstoy's \"War and Peace\", roughly a bookshelf-width's worth of source code.");?>
</p>
<p class="justify">
<?php echo T_("Mind you, this is source code (and docs) crafted and debugged by actual humans, this is *not* autogenerated code.  Tools (such as glade or g-wrap) can generate gaziilions of lines of code automatically; I'm not counting those.  Every last line counted here was typed in, edited, indented, tweaked, multiple times, by human hands.");?>
</p>
<p class="justify">
<?php echo T_("Given that we have about 400 outstanding bugs in bugzilla, that works out to about one bug per thousand lines of code, or one bug per 50 pages of printout.  This bug count is actually not atypical for software projects; its near the norm.");?>
</p>
<p class="justify">
<?php echo T_("The table below shows some historical lines-of-code and number-of-files metrics for the <span class=\"gnucash\">GnuCash</span> development project.  Note that not all of the code is counted: for instance, the Makefiles and configure.in and autogen.sh are not counted. Also, files that are automatically generated are not counted, nor are files that have been 'borrowed' from other projects. Also not counted are experimental files, miscellaneous perl scripts, various converters, addons and utilities.  Finally, <tt>glade</tt> files are not counted, although large parts of the overall GUI are described in <tt>glade</tt> files.");?>
</p>
<p class="justify">
<?php echo T_("Note also that KLOC's are not a good metric of programmer productivity, nor even that <code>wc</code> is a good way of counting KLOC's.  Much better measures are complexity metrics, which, for example, count the number and size of if-then-else blocks, or the number and size of all blocks, or the number of math operators per statement.  Maybe someday we'll run one of those tools on this code. For now, this is what we have.  On the other hand, we've attempted to count only those files that contain human-edited code, that is, files that are directly edited by humans.  The point of doing this is to avoid artificially inflating the KLOC counts by counting automatically generated code (which is why the glade files are not counted: they are large and automatically generated).");?>
</p>
<div class="TABLE">
<p><b><?php echo T_("Table 1.  Historical Development Stats");?></b></p>
<table border="1" class="CALSTABLE">
<thead>
<tr>
<th><?php echo T_("Version");?></th>
<th>engine</th>
<th>backend</th>
<th>register</th>
<th>ledger</th>
<th>motif</th>
<th>gnome</th>
<th><?php echo T_("misc app");?></th>
<th>import-export</th>
<th>reports</th>
<th>scheme</th>
<th>business</th>
<th>test</th>
<th>docs</th>
<th><?php echo T_("internal txt");?></th>
<th><?php echo T_("Total");?></th>
<th><?php echo T_("Languages");?></th>
<th><?php echo T_("Author Credits");?></th>
</tr>
</thead><tbody>

<!--      xacc-0.9 Sept 97              -->
<tr>
<td>xacc-0.9 Sept 97</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>34 files (7.5+0.9)</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>5 files (0.4)</td>
<td>1 file (0.1)</td>
<td>40 files (8.8)</td>
<td>1</td>
<td>1</td>
</tr>
<!--             xacc-0.9w Dec 97      -->
<tr>
<td>xacc-0.9w Dec 97</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>51 files (13.8+1.5)</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>9 files (0.8)</td>
<td>1 file (0.1)</td>
<td>61 files (16.2)</td>
<td>1</td>
<td>2</td>
</tr>
<!-- xacc-1.0.17 Feb 98  -->
<tr>
<td>xacc-1.0.17 Feb 98</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>52 files (14.8+1.8)</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>12 files (1.4)</td>
<td>4 files (0.3)</td>
<td>68 files (18.3)</td>
<td>1</td>
<td>7</td>
</tr>
<!--                 -->
<tr>
<td>gnucash-1.1.15 Aug 98</td>
<td>24 files (6.2+1.5)</td>
<td>-</td>
<td>31 files (6.1+1.7)</td>
<td>5 files (1.4+0.4)</td>
<td>30 files (7.4+0.7)</td>
<td>17 files (3.4+0.5)</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>3 files (0.3)</td>
<td>-</td>
<td>-</td>
<td>16 files (1.9)</td>
<td>17 files (1.8)</td>
<td>159 files (34.7)</td>
<td>1 (0.17)</td>
<td>25</td>
</tr>
<!--                          -->
<tr>
<td>gnucash-1.2.2 Aug 99</td>
<td>41 files (10.2+3.6)</td>
<td>-</td>
<td>28 files (5.5+1.7)</td>
<td>14 files (2.4+0.6)</td>
<td>26 files (8.7+0.5)</td>
<td>-</td> 
<td>-</td>
<td>-</td>
<td>-</td>
<td>14 files (1.4)</td>
<td>-</td>
<td>-</td>
<td>30 files (2.6)</td>
<td>15 files (1.8)</td>
<td>168 files (39.0)</td>
<td>3 (0.54)</td>
<td>41</td>
</tr>
<!--                        -->
<tr>
<td>gnucash-1.3.6 April 2000</td>
<td>41 files (12.9+4.0)</td>
<td>-</td>
<td>32 files (6.8+2.1)</td>
<td>19 files (4.0+0.8)</td>
<td>-</td> 
<td>78 files (32.2+3.0)</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>74 files (4.0+0.7+12.3)</td>
<td>-</td>
<td>-</td>
<td>33 files (7.8)</td>
<td>25 files (4.5)</td>
<td>302 files (95.1)</td>
<td>5 (4.3) </td>
<td>61</td>
</tr>
<!--                              -->
<tr>
<td>gnucash-1.4.6 Sept 2000</td>
<td>43 files (13.0+3.6)</td>
<td>-</td>
<td>27 files (5.9+2.0)</td>
<td>24 files (5.4+1.8)</td>
<td>-</td>
<td>82 files (33.8+3.0)</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>68 files (4.0+0.7+15.5)</td>
<td>-</td>
<td>-</td>
<td>36 files (9.3)</td>
<td>36 files (4.8)</td>
<td>316 files (101.9)</td>
<td>7 (6.0)</td>
<td>82</td>
</tr>
<!--                        -->
<tr>
<td>gnucash-1.4.12 April 2001</td>
<td>43 files (13.1+3.6)</td>
<td>-</td>
<td>27 files (5.9+2.0)</td>
<td>24 files (5.4+1.8)</td>
<td>-</td>
<td>82 files (33.5+3.0)</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>73 files (4.0+0.7+17.7)</td>
<td>-</td>
<td>-</td>
<td>43 files (11.5)</td>
<td>39 files (6.0)</td>
<td>331 files (108.2)</td>
<td>12 (17.8)</td>
<td>97</td>
</tr>
<!--                            -->
<tr>
<td>gnucash-1.5.2 Sept 2000</td>
<td>46 files (14.9+3.7)</td>
<td>-</td>
<td>29 files (6.3+2.0)</td>
<td>25 files (5.7+1.8)</td>
<td>-</td>
<td>83 files (35.8+2.9)</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>73 files (4.6+0.8+16.8)</td>
<td>-</td>
<td>-</td>
<td>37 files (10.7)</td>
<td>48 files (8.2)</td>
<td>341 files (114.2)</td>
<td>8 (7.8)</td>
<td>89</td>
</tr>
<!--                          -->
<tr>
<td>gnucash-1.6.0 June 2001</td>
<td>139 files (42.8+8.3)</td>
<td>-</td>
<td>28 files (5.7+2.0) </td>
<td>23 files (10.1+1.5)</td>
<td>-</td>
<td>132 files (60.0+4.2)</td>
<td>-</td>
<td>-</td>
<td>-</td>
<td>102 files (6.2+0.8+27.3)</td>
<td>-</td>
<td>-</td>
<td>64 files (12.1)</td>
<td>69 files (12.9)</td>
<td>455 files (193.9)</td>
<td>11 (18.7)</td>
<td>123</td>
</tr>
<!--                     -->
<tr>
<td>gnucash-1.7.2 November 2002</td>
<td>104 files (28.7+7.8+3.3)</td>
<td>89 files (30.0+3.3)</td>
<td>34 files (5.2+2.0) <hr></hr> 29 files (10.5+1.2)</td>
<td>17 files (9.4+0.7)</td>
<td>-</td>
<td>143 files (56.0+4.7+0.9)</td>
<td>75 files (17.0+2.5+5.1)</td>
<td>78 files (11.1+1.5+7.3)</td>
<td>38 files (2.4+0.1+14.2)</td>
<td>17 files (3.4)</td>
<td>94 files (19.9+1.9+4.5)</td>
<td>72 files (7.9+0.1+0.7)</td>
<td>83 files (22.2)</td>
<td>62 files (11.6)</td>
<td>935 files (297.1)</td>
<td>21 (56.1)</td>
<td>130</td>
</tr>
<!--                     -->
<tr>
<td>gnucash-1.8.4 June 2003</td>
<td>100 files (29.7+8.3+3.4)</td>
<td>89 files (30.1+3.3)</td>
<td>35 files (5.3+2.0) <hr></hr> 31 files (10.7+1.2)</td>
<td>17 files (10.2+0.8)</td>
<td>-</td>
<td>151 files (58.7+5.1+1.1)</td>
<td>71 files (16.9+2.6+5.2)</td>
<td>86 files (13.3+1.8+7.5)</td>
<td>52 files (2.4+0.2+15.1)</td>
<td>17 files (4.1)</td>
<td>98 files (21.5+2.0+5.1)</td>
<td>76 files (8.6+0.2+0.7)</td>
<td>24 files (13.8) <hr></hr> 199 files (80.3)</td>
<td>69 files (14.3)</td>
<td>1115 files (385.5)</td>
<td>23 (62.4)</td>
<td>139</td>
</tr>
</tbody></table ></div>

<p class="justify">
<?php echo T_("Each cell displays the following:");?>
</p>
    
<p class="justify">
<?php echo T_("number of *c and *.h and *.scm files (KLOCS in *.c + KLOCS in *.h + KLOCS in *.scm).  If there are no *.scm files in the directory, then only (KLOCS in *.c + KLOCS in *.h) are displayed.  If there is only one number in the parenthesis, it is the approriate KLOC count for that statistic.");?>
</p>

<p class="justify">
<?php echo T_("where KLOC == kilo-lines-of-code, as reported by <code>wc</code>. As noted above, wc is not a terribly good code metric, but its what we have handy.");?>
</p>

<b><?php echo T_("Table Column Legend");?></b><br></br><br></br>
    <p></p>
 <dl>
    <dt><b>engine</b></dt>
    <dd><?php echo T_("Contents of the src/engine and the include directories. The engine was split out from the motif code in version 1.1. The data storage backend (file-io, sql) was split out in the course of version 1.5");?>
	<p></p>
        </dd>
    <dt><b>backend</b></dt>
    <dd><?php echo T_("Contents of the src/backend directory (version 1.7 and later) or of src/engine/file, src/engine/sql (version 1.6 and earlier)");?>
	<p></p>
        </dd>
    <dt><b>register</b></dt>
    <dd><?php echo T_("Contents of the src/register directory (version 1.6 and earlier) or src/register/register-core (version 1.7 and later).  The register was split out as a separate component from the motif code in version 1.1. As can be seen from the stats, the register code has been fairly stable. At version 1.7 and later, this cell shows a second count: the number of lines of code in src/register/register-gnome (previously counted as part of gnome)");?>
	<p></p>
        </dd>
    <dt><b>ledger</b></dt>
    <dd><?php echo T_("*.c, *.h files in the src directory only (version 1.6 and earlier) or src/register/ledger-core (version 1.7 and later)");?>
	<p></p>
    </dd>
    <dt><b>motif</b></dt>
    <dd><?php echo T_("Contents of the src/motif directory (version 1.2 and earlier).  The motif version of the code was discontinued after version 1.2, after most of the non-gui code was moved to either the engine, the register or the ledger.");?>
	<p></p>
    </dd>
    <dt><b>gnome</b></dt>
    <dd><?php echo T_("Contents of src/gnome plus src/register/gnome (version 1.6 and earlier). For version 1.7 and later, this consists of src/gnome, src/gnome-search and src/gnome-util");?>
	<p></p>
    </dd>

    <dt><b><?php echo T_("misc app");?></b></dt>
    <dd><?php echo T_("Contents of miscellanous application-related directories (version 1.7 and later): src/app-file, src/app-utils, src/calculation, src/core-utils, src/gnc-module, src/network-utils, src/tax/us");?>
	<p></p>
    </dd>

    <dt><b>import-export</b></dt>
    <dd><?php echo T_("Code to import and export various file formats: contents of the src/import-export directory.");?>
	<p></p>
     </dd>

    <dt><b>reports</b></dt>
    <dd><?php echo T_("Code to generate reports and graphs: contents of the src/reports directory.");?>
	<p></p>
     </dd>

    <dt><b>scheme</b></dt>
    <dd><?php echo T_("scheme and guile code in directories src/scm plus src/guile (version 1.6 and earlier). In version 1.7 and later, much of this code went into reports, import/export, and into indiovidual modules; thus only miscellaneous code remains.");?>
	<p></p>
    </dd>

    <dt><b>business</b></dt>
    <dd><?php echo T_("Code to add small-business features: contents of the src/business directory.");?>
	<p></p>
     </dd>

    <dt><b>test</b></dt>
    <dd><?php echo T_("Code to peform automated regression tests: contents of the src/*/test directories.");?>
	<p></p>
     </dd>

    <dt><b>docs</b></dt>
    <dd><?php echo T_("English-language-only user documentation, including on-line help and manual (html, sgml or xml). For version 1.8.4 and later, the number below the bar counts the translated, non-english docs (currently de, es, fr, pt_PT).  Both of these numbers are somewhat hard to count, because of fairly large format churns, and multiple competing versions.");?>
	<p></p>
    </dd>
    
    <dt><b><?php echo T_("internal txt");?></b></dt>
    <dd><?php echo T_("The number of design documents and README files aimed at developers. This includes *.txt files, *.texinfo files and README.* files in all subdirectories.  For version 1.7 and later, only those in the src subdirectory are counted (leaving out some half-dozen scattered elsewhere)");?>
	<p></p>
     </dd>

    <dt><b><?php echo T_("Languages");?></b></dt>
    <dd><?php echo T_("The number of languages that the application messages have been translated to (the number of <tt>po/*.po</tt> files). In parenthesis, the number of messages in the message files (<tt>grep msgstr po/*.po |wc</tt>), in thousands.");?>
	<p></p>
    </dd>
    
    <dt><b><?php echo T_("Author Credits");?></b></dt>
    <dd><?php echo T_("The number of people credited in the AUTHORS file (version 1.6 and later) or the README file (earlier versions).  These include lead developers, patch submitters and national-language translators.  This includes additional credits listed in the gnucash-docs/AUTHORS file that are not listed in the main gnucash/AUTHORS file.");?>
	<p></p>
    </dd>
</dl>
</div>
<?php include("externals/footer.phtml"); ?>
